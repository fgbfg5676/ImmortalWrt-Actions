name: Build OpenWrt

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Init Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext \
          gcc-multilib g++-multilib git gperf haveged help2man intltool libelf-dev \
          libglib2.0-dev libgmp-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev \
          libncursesw5-dev libreadline-dev libssl-dev libtool libz-dev lrzsz mkisofs \
          msmtp nano ninja-build patch pkgconf python3 python3-dev python3-pip \
          python3-setuptools python3-wheel python3-venv qemu-utils rsync scons \
          squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip wget xmlto \
          xxd zlib1g-dev file tar xz-utils jq sudo
        # Ubuntu Noble(24.04) 没有 python3-distutils，用 venv 替代
        python3 -m pip install --upgrade pip setuptools wheel

    - name: Cache dl
      uses: actions/cache@v4
      with:
        path: openwrt/dl
        key: dl-${{ github.run_id }}
        restore-keys: |
          dl-

    - name: Cache Toolchain
      uses: actions/cache@v4
      with:
        path: openwrt/staging_dir
        key: toolchain-${{ github.sha }}
        restore-keys: |
          toolchain-

    - name: Clone Source
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        [ -e ../$FEEDS_CONF ] && cp ../$FEEDS_CONF feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Custom Scripts Part 1
      run: |
        [ -e $DIY_P1_SH ] && chmod +x $DIY_P1_SH && ./$DIY_P1_SH

    - name: Load Custom Config
      run: |
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config

    - name: Custom Scripts Part 2
      run: |
        cd openwrt
        [ -e ../$DIY_P2_SH ] && chmod +x ../$DIY_P2_SH && ../$DIY_P2_SH

    - name: Download Packages
      run: |
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -delete

    - name: Build
      run: |
        cd openwrt
        echo -e "\n================ 开始编译 OpenWrt ================\n"
        make -j$(nproc) || make -j1 V=s
        echo -e "\n================ 编译完成 =================\n"

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt
        path: openwrt/bin

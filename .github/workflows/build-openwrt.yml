name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: CM520-79F

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      actions: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Initialize environment
        run: |
          sudo apt update
          sudo apt install -y build-essential git wget curl unzip ccache libncurses5-dev zlib1g-dev python3
          sudo apt install -y golang      # <<<<<< 安装 Go
          sudo timedatectl set-timezone "$TZ"
          sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

      - name: Clone OpenWrt source
        run: |
          git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt

      - name: Load custom feeds and DIY part1
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P1_SH

      - name: Update and install feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a -f -p my_packages
          ./scripts/feeds install -a -p passwall_packages
          ./scripts/feeds install -a

      - name: Load custom configuration and DIY part2
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          # 设置 Go 环境和交叉编译
          export PATH=$PATH:/usr/local/go/bin
          export GOOS=linux
          export GOARCH=arm
          export GOARM=7
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: Make defconfig and download packages
        run: |
          cd openwrt
          make defconfig
          make download -j8

      - name: Compile OpenWrt firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 || make -j1 V=s

      - name: Organize firmware
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware_${{ env.FILE_NAME }}
          path: ${{ env.FIRMWARE }}

name: Build OpenWrt

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Free disk space
      run: |
        echo -e "\033[34m[INFO] 清理磁盘空间...\033[0m"
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc || true
        df -h

    - name: Install build dependencies
      run: |
        echo -e "\033[34m[INFO] 安装编译依赖...\033[0m"
        sudo apt-get update
        sudo apt-get install -y \
          # 基础构建工具
          build-essential flex bison g++ gawk gcc-multilib gettext \
          # OpenWrt 常用依赖
          git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
          # 压缩工具
          gzip bzip2 tar xz-utils unzip \
          # 系统工具
          file wget curl ca-certificates coreutils findutils grep sed diffutils \
          # 编译加速
          ccache libzstd-dev \
          # 语言环境
          bash perl
        echo -e "\033[32m[OK] 依赖安装完成\033[0m"

        echo -e "\033[34m[INFO] 修复 bash/perl 循环链接...\033[0m"
        sudo rm -f /usr/bin/bash
        sudo ln -s /bin/bash /usr/bin/bash
        sudo rm -f /usr/bin/perl
        sudo ln -s /usr/bin/perl /usr/bin/perl

        echo -e "\033[34m[INFO] 检查关键工具...\033[0m"
        for tool in stat install xargs realpath; do
          if ! command -v $tool >/dev/null 2>&1; then
            echo -e "\033[33m[WARN] 缺少工具: $tool (部分在 coreutils/findutils 内)\033[0m"
          else
            echo -e "\033[32m[OK] 已找到: $tool -> $(command -v $tool)\033[0m"
          fi
        done

    - name: Cache Go
      uses: actions/cache@v4
      with:
        path: openwrt/staging_dir/host/bin/go
        key: go-${{ runner.os }}-${{ env.REPO_BRANCH }}

    - name: Cache dl
      uses: actions/cache@v4
      with:
        path: openwrt/dl
        key: dl-${{ runner.os }}-${{ env.REPO_BRANCH }}
        restore-keys: |
          dl-${{ runner.os }}-

    - name: Cache ccache
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        key: ccache-${{ runner.os }}-${{ env.REPO_BRANCH }}
        restore-keys: |
          ccache-${{ runner.os }}-

    - name: Clone source
      run: |
        echo -e "\033[34m[INFO] 克隆源码 $REPO_URL -b $REPO_BRANCH...\033[0m"
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Load custom feeds
      run: |
        echo -e "\033[34m[INFO] 加载 feeds 配置...\033[0m"
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        echo -e "\033[34m[INFO] 应用自定义配置...\033[0m"
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        [ -x $DIY_P1_SH ] && (cd openwrt && bash ../$DIY_P1_SH)

    - name: Build
      run: |
        cd openwrt
        echo -e "\033[34m[INFO] 准备配置...\033[0m"
        make defconfig
        [ -x ../$DIY_P2_SH ] && bash ../$DIY_P2_SH

        echo -e "\033[34m[INFO] 下载依赖包...\033[0m"
        make download -j$(nproc) || true

        echo -e "\033[34m[INFO] 开始并行编译...\033[0m"
        make -j$(nproc) V=s || (echo -e "\033[33m[WARN] 并行失败，回退到单线程...\033[0m" && make -j1 V=s)

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt
        path: openwrt/bin/targets

# Build OpenWrt for MobiPromo CM520-79F (ARMv7 / ipq40xx/generic)
name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: CM520-79F

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      actions: write
      contents: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Debug Go
        run: |
          go version
          export GOTOOLCHAIN=$(which go)
          echo "GOTOOLCHAIN=$GOTOOLCHAIN"

      - name: Clone OpenWrt
        run: |
          git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
          echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
          echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
          useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
          echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV

      - name: Load custom feeds and DIY scripts
        run: |
          cd openwrt
          # 覆盖 feeds 配置
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF feeds.conf.default
          chmod +x $GITHUB_WORKSPACE/$DIY_P1_SH $GITHUB_WORKSPACE/$DIY_P2_SH
          # 先执行 DIY part1
          $GITHUB_WORKSPACE/$DIY_P1_SH

          # 更新并安装所有 feeds（包含默认 LuCI + 自定义 feeds）
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a -f -p my_packages
          ./scripts/feeds install -a -p passwall_packages

          # 覆盖默认配置和文件
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE .config
          [ -e files ] && mv files files_backup

          # 执行 DIY part2
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: Prepare build
        run: |
          cd openwrt
          make defconfig
          make download -j8
          # 删除损坏文件
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        id: compile
        run: |
          cd openwrt
          echo "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Organize firmware
        if: steps.compile.outputs.status == 'success'
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        if: steps.compile.outputs.status == 'success'
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      - name: Release firmware
        uses: ncipollo/release-action@v1
        if: steps.compile.outputs.status == 'success'
        with:
          name: R${{ env.DATE }} for ${{ env.FILE_NAME }}
          allowUpdates: true
          removeArtifacts: true
          tag: ${{ env.FILE_NAME }}
          commit: main
          artifacts: ${{ env.FIRMWARE }}/*
          body: |
            - 默认IP：10.10.10.100 默认密码：无
            - 当前使用版本:【源码更新记录】
            ${{ env.useVersionInfo }}

# Build OpenWrt for CM520-79F with auto LuCI Banner
name: Build OpenWrt for CM520-79F

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  FILE_NAME: CM520-79F
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 150

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Free up disk space
      run: |
        echo "Freeing up disk space..."
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo rm -rf /usr/local/.ghcup /usr/local/graalvm /opt/microsoft
        df -h

    - name: Install build dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-dev python3-setuptools rsync unzip \
          zlib1g-dev file wget subversion patch upx-ucl autoconf automake \
          curl asciidoc binutils bzip2 gzip p7zip p7zip-full libelf-dev \
          lib32gcc-s1 libc6-dev lib32stdc++6 zlib1g-dev:i386 lib32z1-dev \
          ccache ecj fastjar re2c xz-utils python3 python3-pip python3-ply \
          python3-venv python3-yaml haveged lrzsz device-tree-compiler scons \
          antlr3 gperf intltool mkisofs qemu-utils swig tar
        sudo apt-get clean
        sudo apt-get autoremove -y

    - name: Setup Go (1.25.0)
      uses: actions/setup-go@v5
      with:
        go-version: '1.25.0'
        check-latest: true

    - name: Setup ccache
      run: |
        sudo mkdir -p /usr/lib/ccache
        sudo ln -sf /usr/bin/ccache /usr/lib/ccache/gcc
        sudo ln -sf /usr/bin/ccache /usr/lib/ccache/g++
        sudo ln -sf /usr/bin/ccache /usr/lib/ccache/cc
        sudo ln -sf /usr/bin/ccache /usr/lib/ccache/c++
        export PATH="/usr/lib/ccache:$PATH"
        ccache --max-size=2G
        ccache --set-config=compression=true

    - name: Cache downloads and toolchain
      uses: actions/cache@v4
      with:
        path: |
          openwrt/dl
          ~/.ccache
          openwrt/staging_dir
          openwrt/build_dir/toolchain-*
        key: build-cache-${{ env.REPO_BRANCH }}-${{ hashFiles('**/.config') }}
        restore-keys: |
          build-cache-${{ env.REPO_BRANCH }}-

    - name: Clone ImmortalWrt source
      run: |
        if [ -d openwrt ]; then rm -rf openwrt; fi
        git clone --depth=1 -b $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Add additional feeds
      run: |
        cd openwrt
        echo "src-git golang https://github.com/sbwml/packages_lang_golang;22.x" >> feeds.conf.default
        sed -i '/openwrt-node-packages/d' feeds.conf.default || true

    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Run DIY part1 script
      run: |
        cd openwrt
        if [ -f "../$DIY_P1_SH" ]; then
          chmod +x "../$DIY_P1_SH"
          "../$DIY_P1_SH"
        fi

    - name: Copy custom configuration
      run: |
        cd openwrt
        if [ -f "../$CONFIG_FILE" ]; then
          cp "../$CONFIG_FILE" .config
        else
          make defconfig
        fi

    - name: Run DIY part2 script and create banner
      run: |
        cd openwrt
        if [ -f "../$DIY_P2_SH" ]; then
          chmod +x "../$DIY_P2_SH"
          "../$DIY_P2_SH"
        fi
        if [ -f "../create-banner.sh" ]; then
          chmod +x "../create-banner.sh"
          "../create-banner.sh"
        fi

    - name: Generate final config
      run: |
        cd openwrt
        make defconfig

    - name: Download packages with retry
      run: |
        cd openwrt
        if ! timeout 1800 make download -j$(nproc) V=s; then
          find dl -size -1024c -delete 2>/dev/null || true
          timeout 1800 make download -j1 V=s || true
        fi
        find dl -size -1024c -delete 2>/dev/null || true
        find dl -name "*.hash" -delete 2>/dev/null || true

    - name: Compile toolchain
      run: |
        cd openwrt
        export PATH="/usr/lib/ccache:$PATH"
        timeout 3600 make tools/install -j$(($(nproc)+1)) V=s || timeout 3600 make tools/install -j1 V=s
        timeout 3600 make toolchain/install -j$(($(nproc)+1)) V=s || timeout 3600 make toolchain/install -j1 V=s

    - name: Build OpenWrt firmware
      run: |
        cd openwrt
        export PATH="/usr/lib/ccache:$PATH"
        BUILD_SUCCESS=false
        if timeout 7200 make -j$(($(nproc)+1)) V=s; then
          BUILD_SUCCESS=true
        else
          timeout 3600 make -j2 V=s && BUILD_SUCCESS=true || timeout 3600 make -j1 V=s && BUILD_SUCCESS=true
        fi
        if [ "$BUILD_SUCCESS" != "true" ]; then exit 1; fi

    - name: Prepare outputs
      run: |
        cd openwrt
        DEVICE_NAME=$(grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' | head -1)
        DEVICE_NAME=${DEVICE_NAME:-unknown}
        echo "DEVICE_NAME=$DEVICE_NAME" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV
        echo "FIRMWARE_PATH=$(pwd)/bin/targets/*/*" >> $GITHUB_ENV

    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_${{ env.FILE_NAME }}_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE_PATH }}
        retention-days: 30

    - name: Upload build logs and config
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-info_${{ env.FILE_DATE }}
        path: |
          openwrt/.config
          openwrt/bin/packages/
          openwrt/tmp/.packagefeeds
        retention-days: 7

    - name: Create GitHub Release
      if: success()
      uses: ncipollo/release-action@v1
      with:
        name: OpenWrt ${{ env.FILE_NAME }} - ${{ env.FILE_DATE }}
        tag: ${{ env.FILE_NAME }}-${{ env.FILE_DATE }}
        commit: ${{ github.sha }}
        allowUpdates: true
        artifacts: ${{ env.FIRMWARE_PATH }}/*,openwrt/.config
